//chapter 1 데이터 타입

/*
데이터 타입
기본형/참조형 

기본형-값이 담긴 주소값을 바로 복제 (불변성)
참조형-값이 담긴 주솟값들로 이루어진 묶음을 가리키는 주솟값을 복제

숫자의 경우 int/float 상관없이 64비트(8바이트)를 할당. c=int 4바이트 
식별자= 변수명

let a='abc';
abc를 저장할 다른 공간을 확보하고 주소값을 대신 저장하는 것이다. 
변수영역/ 데이터 영역 
나눈 이유 =데이터 변환 및 메모리 효율성

문자열은 규격없이 글자당 (영어 1,한글 2) 가변적으로 할당
기존 문자열에 새로운 값 추가, 제거=새로운 공간에 새로운 값을 저장하여 주소를 변수 공간에 할당

변수와 상수=변수 영역 메모 영역 
불변성= 데이터 영역 

숫자, 문자열, boolean,null,undegined, symbol은 모두 불변값이다. 기본형
배열, 함수, 객ㅈ체, 날짜 등이 가변형 .

let b=5
컴퓨터는 데이터 영역에서 5를 찾고 없으면 데이터 공간을 만들어 저장한다. 그리고 그 주소를 b에 저장
let c=5
이전의 주소값을 복사. 

let obj1={

    a:1,
    b:'bbb',
};
=객체의 변수 영역이 존재

참조 카운터 =0=가비지 컬렉터의 수거 대상

복사시 애초에 ㄴㄷ새로운 주소값. 
데이터 변경시 새로운 데이터 주소값. 

불변 객체는 파라미터만 변경 시 유지

얕은 복사-바로 아래 단게의 값만 복사. (프로퍼티의 주솟값만)
깊은 복사- 내부의 모든 값들을 전부 찾아 복사. 
방법: 다시 그 내부의 프로퍼티들을 복사(재귀적으로 해야함)

typedef 명령어가 null에 대해서도 object를 반환한다

undefined: 값 부여하지 앟은 변수, 객체 내부의 존재하지 않는 프로퍼티, return문 없거나 호출되지 않는 함수의 실행 결과
하지만 비어있는 요소와 undefined은 다르다. 비어있는 요소는 순회와 관련된 배열 메서들의 순회 대상에서 제외

new Array()=배열 선언 방식

배열은 특정 인덱스에 값을 지정할때 비로ㅗ 빈 공간을 확보
사용자가  undefined=그자체로 값
컴퓨터= 인덱스 자체가 존재하지 않음
 

*/