서버

서버는 네트워크를 통해 클라이언트에 정보나 서비스를 제공하는 컴퓨터 또는 프로그램
서버도 다른 서버에 요청을 보낼 수 있다

노드는 자바스크립트 프로그램이 서버로서 기능하기 위한 도구를 제공

런타임은 특정 언어로 만든 프로그램들을 실핼할 수 있는 환경
자바스크립트 실행기

브라우저는 자바스크립트 런타임을 내장
노드는 v8,libuv 라이브러리 사용

libuv=이벤트 기반, 논 블로킹 I/0모델, 

이벤트 기반: 이벤트가 발생할 때 미리 지정해둔 작업을 수행하는 방식
 ex:클릭, 네트워크 요청

클릭 '이벤트 리스너'에 경고창을 띄우는 '콜백 함수'를 '등록'.

발생한 이벤트가 없거나 발생한 이벤트를 다 처리하면 대기

이벤트 루프 콜백 함수 관리 및 동시 발생 이벤트의 처리 순서 
함수 호출 부분을 호출 스택에 넣는다(call stack)

anonymous 함수- 처음 실행 시의 전역 컨텍스트(global context)
자바스크립트는 실행 시 기본적으로 전역 컨텍스트 안에서 돌아감

함수는 실행 시 호출 스택에 머물렀다가 실행이 완료되면 지워짐
setTimeout(run,3000) 3초 뒤에 run 함수를 실행하여라

백그라운드: setTimeout같은 타이머나 이벤트 리스너들이 대기.여러 작업 동실 실행 가능

태스크 큐: 이벤트 발생 후, 백그라운드에서는 태스크 큐로 타이머나 이벤트 리스너의 콜백 
함수를 보냔다. 순서대로 서 있다. 콜백 큐라고도 한다. 

set timeout 실행(호출 스택에서 빠짐)-콜백 run= 백그라운드- 3초 후 태스크 큐

호출 스택 실행이 끝나 비워지면 이벤트 뤂가 테스크 큐의 콜백을 호출 스택으로 올림

호출 스택에 함수가 너무 많으면 3초 이후에도 run함수가 실행되지 않을 수 있다. 
이벤트 루프는 호출 스택이 비어있을 때만 태스크 큐의 함수를 이동.
=setTimeout의 시간이 정확하지 않을 수 있다.

I/0작업은 동시에 실행
-파일 시스템 접근, 네트워크를 통한 요청. 

노드는 논블로킹 시스템이다. 이전 작업 완료 때까지 대기하지 않고 다음
더 빠르지만 동시 처리 가능해야함

노드는 I/O를 백그라운드에 넘겨 동시 처리. 
논 블로킹 방식으로 코딩을 해줘야한다. ex setTimeout(콜백,0)
0으로 해줘도 1-4ms의 지연시간이 있다.

순서를 바꿈으로써 더욱 처리를 빨리 하게 해줄 수는 있어도 동시를 의미x

프로세스는 운영체제에서 할당하는 작업의 단위
노드,웹=개별적. 프로세스 간에는 메모리 등의 자원 공유x

스레드는 프로세스 내에서 실행되는 흐름의 단위
프로세세는 스레드를 여러개 생성, 여러 작업 동시 처리
스레드들은 부모 프로세스의 자원 공유=같은 주소의 메모리=데이터 공유

노드는 싱글 스레드는 아니지만 제어가능한 스레드가 하나.

노드가 싱글 스레드로 동작하지 않는 두가지 경우
1. THREAD POOL: 특정 동작 수행히 스스로 멀티 스레드 사용. 직접 여러개 제어 가능. 압호화. 압축 등
2. WORKER THREAD: 직접 다수의 스레드 다룰 수 있다. cpu연산 많은 작업 시

멀티 스레딩보다는 멀티 프로세싱을 한다.

cpu 연산을 많이 요구로 하는 작업에 노드는 맞지 않다. 개수는 많지만 크기는 작은 데이터를
실시간으로 주고받기.

